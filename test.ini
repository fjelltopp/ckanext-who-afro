[DEFAULT]
debug = false
smtp_server = localhost
error_email_from = ckan@localhost

[app:main]
use = config:../ckan/test-core.ini

# Insert any custom config settings to be used when running your extension's
# tests here. These will override the one defined in CKAN core's test-core.ini
ckan.plugins = who_afro scheming_datasets activity
ckan.auth.allow_dataset_collaborators = true
ckan.locale_default = en_GB
ckan.locale_order = en_GB fr pt_PT
ckan.locales_offered = en_GB fr pt_PT
ckan.locales_filtered_out = en

scheming.dataset_schemas = ckanext.who_afro:tests/schemas/auto_generate_name_from_title.yaml
                           ckanext.who_afro:tests/schemas/language_validator.yaml
                           ckanext.who_afro:tests/schemas/autofill.json
                           ckanext.who_afro:tests/schemas/who_license_autofill.yaml
                           ckanext.who_afro:tests/schemas/indicator.yaml

scheming.presets = ckanext.scheming:presets.json
                   ckanext.who_afro:presets.json

country_data_url = file://./ckanext/who_afro/country_data.csv

googleanalytics.measurement_id = "G-MCS01BTG6Q"

## The two datastore configurations below don't work
## CKAN is always getting the values from environment variables CKAN_DATASTORE_WRITE_URL and CKAN_DATASTORE_READ_URL
# ckan.datastore.write_url = postgresql://datastore:12345678@192.168.49.2/datastore_test
# ckan.datastore.read_url = postgresql://datastore_ro:12345678@192.168.49.2/datastore_test

# Logging configuration
[loggers]
keys = root, ckan, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_ckan]
qualname = ckan
handlers =
level = INFO

[logger_sqlalchemy]
handlers =
qualname = sqlalchemy.engine
level = WARN

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
